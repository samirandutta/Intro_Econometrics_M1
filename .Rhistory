# Basic operations
x = 1
y = 2
a = x+y
m = x*y
s = x-y
x
y
a
s
m
# Vectors
X <- c(0, 1, 2, 3)                       #RV outcomes in Q1
P_x <- c(1/8, 3/8, 3/8, 1/8)             #PDF from Q1
# Vector operations
E_x <- sum(X * P_x)                      #E(X) = 0*1/8 + 1*3/8 + 2*3/8 + 3* 1/8
V_x <- sum(X^2 * P_x) - E_x^2            #V(X) = E(X^2) - [E(X)]^2
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Calculate the CDF
cdf <- cumsum(P_x)
# Plot the CDF
plot2 <- plot(X, cdf, type = "s", lwd = 2, col = "blue",
xlab = "x", ylab = "CDF(x)",
main = "Cumulative Distribution Function (CDF)")
#Combine
plot_grid(plot1, plot2)
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Calculate the CDF
cdf <- cumsum(P_x)
# Plot the CDF
plot2 <- plot(X, cdf, type = "s", lwd = 2, col = "blue",
xlab = "x", ylab = "CDF(x)",
main = "Cumulative Distribution Function (CDF)")
# Clear workspace
rm(list=ls())
# Installing and loading packages
install.packages("dplyr")
library(dplyr)
# Basic operations
x = 1
y = 2
a = x+y
m = x*y
s = x-y
# Vectors
X <- c(0, 1, 2, 3)                       #RV outcomes in Q1
P_x <- c(1/8, 3/8, 3/8, 1/8)             #PDF from Q1
# Vector operations
E_x <- sum(X * P_x)                      #E(X) = 0*1/8 + 1*3/8 + 2*3/8 + 3* 1/8
V_x <- sum(X^2 * P_x) - E_x^2            #V(X) = E(X^2) - [E(X)]^2
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Calculate the CDF
cdf <- cumsum(P_x)
# Plot the CDF
plot2 <- plot(X, cdf, type = "s", lwd = 2, col = "blue",
xlab = "x", ylab = "CDF(x)",
main = "Cumulative Distribution Function (CDF)")
#Combine
plot_grid(plot1, plot2)
# Clear workspace
rm(list=ls())
# Basic operations
x = 1
y = 2
a = x+y
a
# Vectors
X <- c(0, 1, 2, 3)                       #RV outcomes in Q1
P_x <- c(1/8, 3/8, 3/8, 1/8)             #PDF from Q1
# Vector operations
E_x <- sum(X * P_x)                      #E(X) = 0*1/8 + 1*3/8 + 2*3/8 + 3* 1/8
E_x
V_x <- sum(X^2 * P_x) - E_x^2            #V(X) = E(X^2) - [E(X)]^2
V_x
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Plot the PDF
plot1 <- plot(X, P_x, type = "h", lwd = 2, col = "red",
xlab = "x", ylab = "P(X=x)",
main = "Probability Distribution Function (PDF)")
# Calculate the CDF
cdf <- cumsum(P_x)
# Plot the CDF
plot2 <- plot(X, cdf, type = "s", lwd = 2, col = "blue",
xlab = "x", ylab = "CDF(x)",
main = "Cumulative Distribution Function (CDF)")
# Clear workspace
rm(list=ls())
# Set seed for reproducibility
set.seed(123)
# Number of simulations
n_simulations <- 1000
# Store the proportion of heads after each experiment
prop_heads <- numeric(n_simulations)
# Perform the experiment
for (i in 1:n_simulations) {
# Flip a coin 3 times (1 represents heads, 0 represents tails)
flips <- sample(c(0, 1), size = 3, replace = TRUE)
# Calculate the proportion of heads in this experiment
prop_heads[i] <- mean(flips)
}
# Cumulative mean of heads proportions
cumulative_mean_heads <- cumsum(prop_heads) / (1:n_simulations)
# Plot the results to show convergence
plot(1:n_simulations, cumulative_mean_heads, type = "l", col = "blue",
xlab = "Number of Simulations",
ylab = "Proportion of Heads",
main = "Law of Large Numbers: Coin Flip (3 Flips per Experiment)")
abline(h = 0.5, col = "red", lty = 2)  # Expected value (0.5)
# Optional: Add a legend
legend("topright", legend = c("Cumulative Mean", "Expected Value (0.5)"),
col = c("blue", "red"), lty = c(1, 2))
# Plot the results to show convergence
plot(1:n_simulations, cumulative_mean_heads, type = "l", col = "blue",
xlab = "Number of Simulations",
ylab = "Proportion of Heads",
main = "Law of Large Numbers: Coin Flip (3 Flips per Experiment)")
abline(h = 0.5, col = "red", lty = 2)  # Expected value (0.5)
